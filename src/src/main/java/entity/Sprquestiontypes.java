package entity;
// Generated 02.04.2016 23:34:41 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Sprquestiontypes generated by hbm2java
 */
@Entity
@Table(name="sprquestiontypes"
    ,catalog="openeduuz"
)
public class Sprquestiontypes  implements java.io.Serializable {


     private int questionTypeId;
     private String questionTypeName;
     private String questionTypeDescription;
     private Set questionandtypesmappings = new HashSet(0);

    public Sprquestiontypes() {
    }

	
    public Sprquestiontypes(int questionTypeId) {
        this.questionTypeId = questionTypeId;
    }
    public Sprquestiontypes(int questionTypeId, String questionTypeName, String questionTypeDescription, Set questionandtypesmappings) {
       this.questionTypeId = questionTypeId;
       this.questionTypeName = questionTypeName;
       this.questionTypeDescription = questionTypeDescription;
       this.questionandtypesmappings = questionandtypesmappings;
    }
   
     @Id 

    
    @Column(name="questionTypeID", unique=true, nullable=false)
    public int getQuestionTypeId() {
        return this.questionTypeId;
    }
    
    public void setQuestionTypeId(int questionTypeId) {
        this.questionTypeId = questionTypeId;
    }

    
    @Column(name="questionTypeName", length=45)
    public String getQuestionTypeName() {
        return this.questionTypeName;
    }
    
    public void setQuestionTypeName(String questionTypeName) {
        this.questionTypeName = questionTypeName;
    }

    
    @Column(name="questionTypeDescription")
    public String getQuestionTypeDescription() {
        return this.questionTypeDescription;
    }
    
    public void setQuestionTypeDescription(String questionTypeDescription) {
        this.questionTypeDescription = questionTypeDescription;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="sprquestiontypes")
    public Set getQuestionandtypesmappings() {
        return this.questionandtypesmappings;
    }
    
    public void setQuestionandtypesmappings(Set questionandtypesmappings) {
        this.questionandtypesmappings = questionandtypesmappings;
    }




}


