package entity;
// Generated 02.04.2016 23:34:41 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Lectionquestions generated by hbm2java
 */
@Entity
@Table(name="lectionquestions"
    ,catalog="openeduuz"
)
public class Lectionquestions  implements java.io.Serializable {


     private Integer questionId;
     private Courselections courselections;
     private int questionNumber;
     private String questionRu;
     private String questionUz;
     private String questionEn;
     private Set answersforquestionses = new HashSet(0);
     private Set questionandtypesmappings = new HashSet(0);

    public Lectionquestions() {
    }

	
    public Lectionquestions(int questionNumber) {
        this.questionNumber = questionNumber;
    }
    public Lectionquestions(Courselections courselections, int questionNumber, String questionRu, String questionUz, String questionEn, Set answersforquestionses, Set questionandtypesmappings) {
       this.courselections = courselections;
       this.questionNumber = questionNumber;
       this.questionRu = questionRu;
       this.questionUz = questionUz;
       this.questionEn = questionEn;
       this.answersforquestionses = answersforquestionses;
       this.questionandtypesmappings = questionandtypesmappings;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="questionID", unique=true, nullable=false)
    public Integer getQuestionId() {
        return this.questionId;
    }
    
    public void setQuestionId(Integer questionId) {
        this.questionId = questionId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="lectionID")
    public Courselections getCourselections() {
        return this.courselections;
    }
    
    public void setCourselections(Courselections courselections) {
        this.courselections = courselections;
    }

    
    @Column(name="questionNumber", nullable=false)
    public int getQuestionNumber() {
        return this.questionNumber;
    }
    
    public void setQuestionNumber(int questionNumber) {
        this.questionNumber = questionNumber;
    }

    
    @Column(name="questionRU")
    public String getQuestionRu() {
        return this.questionRu;
    }
    
    public void setQuestionRu(String questionRu) {
        this.questionRu = questionRu;
    }

    
    @Column(name="questionUZ")
    public String getQuestionUz() {
        return this.questionUz;
    }
    
    public void setQuestionUz(String questionUz) {
        this.questionUz = questionUz;
    }

    
    @Column(name="questionEN")
    public String getQuestionEn() {
        return this.questionEn;
    }
    
    public void setQuestionEn(String questionEn) {
        this.questionEn = questionEn;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="lectionquestions")
    public Set getAnswersforquestionses() {
        return this.answersforquestionses;
    }
    
    public void setAnswersforquestionses(Set answersforquestionses) {
        this.answersforquestionses = answersforquestionses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="lectionquestions")
    public Set getQuestionandtypesmappings() {
        return this.questionandtypesmappings;
    }
    
    public void setQuestionandtypesmappings(Set questionandtypesmappings) {
        this.questionandtypesmappings = questionandtypesmappings;
    }




}


