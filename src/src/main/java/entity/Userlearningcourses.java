package entity;
// Generated 02.04.2016 23:34:41 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Userlearningcourses generated by hbm2java
 */
@Entity
@Table(name="userlearningcourses"
    ,catalog="openeduuz"
)
public class Userlearningcourses  implements java.io.Serializable {


     private Integer itemId;
     private Courselections courselections;
     private User user;
     private Float assesmentForLection;
     private Float assesmentForHomeTask;
     private Float assesmentForTesting;
     private Integer learningCourseID;

    public Integer getLearningCourseID() {
        return learningCourseID;
    }

    public void setLearningCourseID(Integer learningCourseID) {
        this.learningCourseID = learningCourseID;
    }

    public Userlearningcourses() {
    }

	
    public Userlearningcourses(Courselections courselections, User user) {
        this.courselections = courselections;
        this.user = user;
    }
    public Userlearningcourses(Courselections courselections, User user, Float assesmentForLection, Float assesmentForHomeTask, Float assesmentForTesting) {
       this.courselections = courselections;
       this.user = user;
       this.assesmentForLection = assesmentForLection;
       this.assesmentForHomeTask = assesmentForHomeTask;
       this.assesmentForTesting = assesmentForTesting;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="itemID", unique=true, nullable=false)
    public Integer getItemId() {
        return this.itemId;
    }
    
    public void setItemId(Integer itemId) {
        this.itemId = itemId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="lectioinID", nullable=false)
    public Courselections getCourselections() {
        return this.courselections;
    }
    
    public void setCourselections(Courselections courselections) {
        this.courselections = courselections;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userEmail", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="assesmentForLection", precision=12, scale=0)
    public Float getAssesmentForLection() {
        return this.assesmentForLection;
    }
    
    public void setAssesmentForLection(Float assesmentForLection) {
        this.assesmentForLection = assesmentForLection;
    }

    
    @Column(name="assesmentForHomeTask", precision=12, scale=0)
    public Float getAssesmentForHomeTask() {
        return this.assesmentForHomeTask;
    }
    
    public void setAssesmentForHomeTask(Float assesmentForHomeTask) {
        this.assesmentForHomeTask = assesmentForHomeTask;
    }

    
    @Column(name="assesmentForTesting", precision=12, scale=0)
    public Float getAssesmentForTesting() {
        return this.assesmentForTesting;
    }
    
    public void setAssesmentForTesting(Float assesmentForTesting) {
        this.assesmentForTesting = assesmentForTesting;
    }




}


