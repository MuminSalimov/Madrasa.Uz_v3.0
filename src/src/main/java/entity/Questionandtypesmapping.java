package entity;
// Generated 02.04.2016 23:34:41 by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Questionandtypesmapping generated by hbm2java
 */
@Entity
@Table(name="questionandtypesmapping"
    ,catalog="openeduuz"
)
public class Questionandtypesmapping  implements java.io.Serializable {


     private QuestionandtypesmappingId id;
     private Lectionquestions lectionquestions;
     private Sprquestiontypes sprquestiontypes;

    public Questionandtypesmapping() {
    }

	
    public Questionandtypesmapping(QuestionandtypesmappingId id, Lectionquestions lectionquestions) {
        this.id = id;
        this.lectionquestions = lectionquestions;
    }
    public Questionandtypesmapping(QuestionandtypesmappingId id, Lectionquestions lectionquestions, Sprquestiontypes sprquestiontypes) {
       this.id = id;
       this.lectionquestions = lectionquestions;
       this.sprquestiontypes = sprquestiontypes;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="mappingId", column=@Column(name="mappingID", nullable=false) ), 
        @AttributeOverride(name="lectionQuestionsQuestionId", column=@Column(name="lectionQuestions_questionID", nullable=false) ) } )
    public QuestionandtypesmappingId getId() {
        return this.id;
    }
    
    public void setId(QuestionandtypesmappingId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="lectionQuestions_questionID", nullable=false, insertable=false, updatable=false)
    public Lectionquestions getLectionquestions() {
        return this.lectionquestions;
    }
    
    public void setLectionquestions(Lectionquestions lectionquestions) {
        this.lectionquestions = lectionquestions;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="questionTypeID")
    public Sprquestiontypes getSprquestiontypes() {
        return this.sprquestiontypes;
    }
    
    public void setSprquestiontypes(Sprquestiontypes sprquestiontypes) {
        this.sprquestiontypes = sprquestiontypes;
    }




}


